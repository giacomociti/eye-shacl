@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix ex: <http:/example.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sht: <http://www.w3.org/ns/shacl-test#> .

# shapes 
ex:shape sh:targetNode ex:invalid ;

sh:property [
    sh:path 
        [ 
            sh:alternativePath (
                ex:loves 
                [
                    sh:inversePath 
                    [ sh:alternativePath (ex:knows ex:loves) ]
                ]
            ) 
        ] ;
    sh:minCount 1 ;
] .

# data 
ex:invalid ex:name "invalid" .

<>
  rdf:type mf:Manifest ;
  mf:entries (
      <test12>
    ) ;
.
<test12>
  rdf:type sht:Validate ;
  rdfs:label "Test 12" ;
  mf:action [
      sht:dataGraph <> ;
      sht:shapesGraph <> ;
    ] ;
  mf:result [
      rdf:type sh:ValidationReport ;
      sh:conforms "false"^^xsd:boolean ;
      sh:result  
      [
            a sh:ValidationResult ;
            sh:resultSeverity sh:Violation ;
            sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
            sh:sourceShape [] ;
            sh:focusNode ex:invalid ;
            sh:resultPath 
                [
                    sh:alternativePath (
                        ex:loves 
                        [
                            sh:inversePath 
                            [ sh:alternativePath (ex:knows ex:loves) ]
                        ]
                    ) 
                ] ;
            ] ;
  ] ;
  mf:status sht:approved ;
.