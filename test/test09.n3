@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix ex: <http:/example.org/> .
@prefix earl: <http://www.w3.org/ns/earl#> .

[] sh:shapesGraph <> .

# shapes
ex:shape1 sh:targetSubjectsOf ex:name ;
    sh:severity sh:Warning ;
    sh:class ex:Person;
 .

 ex:shape2 sh:targetObjectsOf ex:name ;
    sh:message "The name should be a string" ;
    sh:datatype xsd:string ;
 .

# data
ex:foo ex:name 5 .

# assertions
{
    (?x { ?x a sh:ValidationResult} ?results) log:collectAllIn [] .
    ?results list:length 2 .

    [
        a sh:ValidationResult ;
        sh:resultSeverity sh:Warning ;
        sh:sourceConstraintComponent sh:ClassConstraintComponent ;
        sh:sourceShape ex:shape1 ;
        sh:focusNode ex:foo ;
        sh:value ex:foo ;
    ] .
    [
        a sh:ValidationResult ;
        sh:resultSeverity sh:Violation ;
        sh:sourceConstraintComponent sh:DatatypeConstraintComponent ;
        sh:sourceShape ex:shape2 ;
        sh:focusNode 5 ;
        sh:value 5 ;
        sh:resultMessage "The name should be a string" ;
    ] .
}
=>
{
    <> a earl:Pass
} .