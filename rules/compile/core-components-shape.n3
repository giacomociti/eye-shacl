
# https://www.w3.org/TR/shacl/#core-components-shape

@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix this: <http://eye-shacl#> .

# NodeConstraintComponent
{
    ?shape sh:node ?nodeShape ; sh:path ?path .
    [] log:notIncludes { ?shape sh:deactivated true } .
}
=>
{
    {
        this: this:report ?report .

        ?shape this:focusNode ?node .
        (?node ?path) this:value ?value .

        ?value this:violates ?nodeShape .

        ?path this:path ?resultPath .
    }
    =>
    {
        ?report sh:result [
            a sh:ValidationResult ;
            sh:sourceConstraintComponent sh:NodeConstraintComponent;
            sh:sourceShape ?shape ;
            sh:focusNode ?node ;
            sh:value ?value ;
            sh:resultPath ?resultPath ;
        ] .
    } .
} .

{
    ?shape sh:node ?nodeShape ; sh:path ?path .
    [] log:notIncludes { ?shape sh:deactivated true } .
}
=>
{
    {
        ?node this:violates ?shape .
    }
    <=
    {
        (?node ?path) this:value ?value .
        ?value this:violates ?nodeShape .
    } .
} .


{
    ?shape sh:node ?nodeShape ; a sh:NodeShape .
    [] log:notIncludes { ?shape sh:deactivated true } .
}
=>
{
    {
        this: this:report ?report .
        ?shape this:focusNode ?node .
        ?node this:violates ?nodeShape .
    }
    =>
    {
        ?report sh:result [
            a sh:ValidationResult ;
            sh:sourceConstraintComponent sh:NodeConstraintComponent;
            sh:sourceShape ?shape ;
            sh:focusNode ?node ;
            sh:value ?node ;
        ] .
    } .
} .

{
    ?shape sh:node ?nodeShape ; a sh:NodeShape .
    [] log:notIncludes { ?shape sh:deactivated true } .
}
=>
{
    {
        ?node this:violates ?shape .
    }
    <=
    {
        ?node this:violates ?nodeShape .
    } .
} .

# PropertyShapeComponent

# node -> property
{
    ?shape sh:property ?propertyShape ; a sh:NodeShape .
    [] log:notIncludes { ?shape sh:deactivated true } .
}
=> 
{
    { ?propertyShape this:focusNode ?node } <= { ?shape this:focusNode ?node }
} .

{
    ?shape sh:property ?propertyShape ; a sh:NodeShape .
    [] log:notIncludes { ?shape sh:deactivated true } .
}
=> 
{
    { ?node this:violates ?shape } <= { ?node this:violates ?propertyShape }
} .

# property -> property
{
    ?shape sh:property ?propertyShape ; sh:path ?path .
    [] log:notIncludes { ?shape sh:deactivated true } .
}
=> 
{
    {
        ?propertyShape this:focusNode ?value 
    }
    <= 
    {
        ?shape this:focusNode ?node .
        (?node ?path) this:value ?value 
    }
} .

{
    ?shape sh:property ?propertyShape ; sh:path ?path .
    [] log:notIncludes { ?shape sh:deactivated true } .
}
=> 
{
    { ?node this:violates ?shape } <= { ?node this:violates ?propertyShape }
} .