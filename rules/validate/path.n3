@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix this: <http://eye-shacl#> .

{
    (?focusNode ?path) this:values ?values
}
<=
{
    (?x { (?focusNode ?path) this:value ?x } ?xs) log:collectAllIn [] .
    ?xs list:unique ?values
} .

# predicate path 
{ 
    (?focusNode ?path) this:value ?value 
} 
<= 
{ 
    ?path this:nodeKind sh:IRI . 
    ?focusNode ?path ?value
} .

# sequence path
{
    (?focusNode (?path)) this:value ?value 
}
<=
{
    (?focusNode ?path) this:value ?value
} .

{
    (?focusNode ?path) this:value ?value 
}
<=
{
    ?path list:firstRest (?first ?rest) .
    (?focusNode ?first) this:value ?v .
    (?v ?rest) this:value ?value
} .



# predicate this:path asserts triples for paths in shapes graphs

{ ?x this:path ?x } <= { ?x this:nodeKind sh:IRI } .

() this:path () .

{ (?x) this:path (?path) } <= { ?x this:path ?path } .

{ 
    ?list this:path ?path .
} 
<= 
{ 
    ?list list:firstRest (?first ?rest) .
    ?first this:path ?firstPath .
    ?rest this:path ?restPath .
    ((?firstPath) ?restPath) list:append ?path . 
} .


